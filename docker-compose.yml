version: '3'
services:
    postgres:
        build: database
        restart: on-failure
        environment:
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASS}
        volumes:
            - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    rabbitmq:
        image: rabbitmq:3-management
        hostname: "rabbitmq"
        restart: on-failure
        ports: 
            - 5672:5672
            - 15672:15672
        environment: 
            - RABBITMQ_DEFAULT_USER=${RABBIT_MQ_USER}
            - RABBITMQ_DEFAULT_PASS=${RABBIT_MQ_PASS}
    logging-db:
        build: logging-db
        restart: on-failure
        environment:
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASS}
        depends_on:
            - rabbitmq
        volumes:
            - ./logging-db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    logging-server:
        build: logging-server
        restart: on-failure
        depends_on:
            - logging-db
            - rabbitmq
    adminer-logging:
        image: michalhosna/adminer:4.7.0
        depends_on:
            - logging-db
        restart: on-failure
        ports:
            - 90:8080
        environment:
            - ADMINER_DRIVER=pgsql
            - ADMINER_DB=postgres
            - ADMINER_SERVER=logging-db
            - ADMINER_USERNAME=${DB_USER}
            - ADMINER_PASSWORD=${DB_PASS}
            - ADMINER_AUTOLOGIN=1
    adminer:
        image: michalhosna/adminer:4.7.0
        depends_on:
            - postgres
        restart: on-failure
        ports:
            - ${ADMINER_PORT}:8080
        environment:
            - ADMINER_DRIVER=pgsql
            - ADMINER_DB=postgres
            - ADMINER_SERVER=postgres
            - ADMINER_USERNAME=${DB_USER}
            - ADMINER_PASSWORD=${DB_PASS}
            - ADMINER_AUTOLOGIN=1
    # quote-cache:
    #     build: quote-cache
    #     restart: always
    #     ports:
    #         - 4444:4444
    #         - 6000:6000
    transaction-server:
        build: transaction-server
        depends_on:
            - postgres
            - quote-cache
            - rabbitmq
        restart: unless-stopped
        ports:
            - ${TRANSACTION_PORT}:5000
        volumes:
            - ./transaction-server/out:/out:rw
        environment:
            - PYTHONUNBUFFERED=TRUE
    workload-generator:
        build: workload-generator
        restart: on-failure
        depends_on:
            - transaction-server
        volumes:
            - ./workloads:/workloads:ro
        stdin_open: true
        tty: true
    webserver:
        image: nginx:1.14.2
        restart: on-failure
        ports:
            - ${WEB_SERVER_PORT}:80
        volumes:
            - ./webserver/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./webserver/html:/usr/share/nginx/html:ro
        stdin_open: true
        tty: true
